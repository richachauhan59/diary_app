[{"/home/richachauhan59/Masai/diary_app/src/index.js":"1","/home/richachauhan59/Masai/diary_app/src/App.js":"2","/home/richachauhan59/Masai/diary_app/src/reportWebVitals.js":"3","/home/richachauhan59/Masai/diary_app/src/components/TodoList.jsx":"4","/home/richachauhan59/Masai/diary_app/src/components/TodoForm.jsx":"5","/home/richachauhan59/Masai/diary_app/src/components/Todo.jsx":"6"},{"size":500,"mtime":1608012511854,"results":"7","hashOfConfig":"8"},{"size":188,"mtime":1608193210030,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1608012511854,"results":"10","hashOfConfig":"8"},{"size":6848,"mtime":1608223119627,"results":"11","hashOfConfig":"8"},{"size":1611,"mtime":1608222565679,"results":"12","hashOfConfig":"8"},{"size":1403,"mtime":1608222635336,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"ytzy8c",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"16"},"/home/richachauhan59/Masai/diary_app/src/index.js",[],["31","32"],"/home/richachauhan59/Masai/diary_app/src/App.js",[],"/home/richachauhan59/Masai/diary_app/src/reportWebVitals.js",[],"/home/richachauhan59/Masai/diary_app/src/components/TodoList.jsx",["33","34","35","36","37","38","39","40","41","42","43","44","45"],"import React,{useState} from 'react'\nimport { RiAlarmWarningLine } from 'react-icons/ri'\nimport Todo from './Todo'\nimport TodoForm from './TodoForm'\n\nexport default function TodoList() {\n    const [todos, setTodos] = useState([])\n    const [newTodos, setNewTodos] = useState([])\n    const [status, setStatus] = useState(false)\n    const [week, setWeek] = useState('')\n    const [month, setMonth] = useState('')\n    const [year, setYear] = useState('')\n    \n    \n    \n    const addTodo = (todo) => {\n        if(!todo.text || /^\\s*$/.test(todo.test)){\n            return\n        }\n        const newTodos = [todo, ...todos]\n\n        setTodos(newTodos)\n    }\n\n    const updatedTodo = (todoId, newValue) =>{\n        if(!newValue.text || /^\\s*$/.test(newValue.test)){\n            return\n        }\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)))\n    }\n\n    const removeTodo = (id) => {\n        const removeArr = [...todos].filter(todo => todo.id !== id)\n        setTodos(removeArr)\n    }\n\n    const completeTodo = (id) => {\n        let updatedTodos = todos.map(todo => {\n            if(todo.id === id){\n                todo.isComplete = !todo.isComplete\n            }\n            return todo\n        })\n        setTodos(updatedTodos)\n    }\n\n    const sortBy = (e) => {\n        const arr_copy=[...todos]\n        if(e.target.value === \"oldest\"){\n            setTodos(arr_copy.reverse())\n        }\n        else if(e.target.value === \"newest\"){\n            setTodos(arr_copy.reverse())\n        }\n    }\n\n    const handleWeek = (e) => {\n        setWeek(e.target.value)\n        const arr_copy =  todos\n        console.log(e.target.value, todos.map(todo => (new Date(todo.date).getDay())))\n        if(e.target.value == \"Default\"){\n            setStatus(false)\n            setNewTodos(arr_copy)\n        }\n        else{\n            // console.log(new Date(arr_copy[0].date).getDay())\n            let dateFilter = arr_copy.filter(todo => (new Date(todo.date).getDay()) == e.target.value)\n            console.log(dateFilter)\n            if(dateFilter.length == 0){\n                setStatus(true)\n            }\n            else{\n                setStatus(false)\n            }\n            setNewTodos(dateFilter)\n            \n        }\n    }\n\n\n    const handleMonth = (e) => {\n        setMonth(e.target.value)\n        const arr_copy =  todos\n        console.log(e.target.value, todos.map(todo => todo.date))\n        if(e.target.value == \"Default\"){\n            setStatus(false)\n            setNewTodos(arr_copy)\n        }\n        else{\n            let monthFilter = arr_copy.filter(todo => todo.date.split('-')[1] == e.target.value)\n            console.log(monthFilter)\n            if(monthFilter.length == 0){\n                setStatus(true)\n            }\n            else{\n                setStatus(false)\n            }\n            setNewTodos(monthFilter)\n            \n        }\n    }\n\n\n    const handleYear = (e) => {\n        setYear(e.target.value)\n        const arr_copy =  todos\n        console.log(e.target.value, todos.map(todo => todo.date))\n        if(e.target.value == \"Default\"){\n            setStatus(false)\n            setNewTodos(arr_copy)\n        }\n        else{\n            let yearFilter = arr_copy.filter(todo => todo.date.split('-')[0] == e.target.value)\n            console.log(yearFilter)\n            if(yearFilter.length == 0){\n                setStatus(true)\n            }\n            else{\n                setStatus(false)\n            }\n            setNewTodos(yearFilter)\n            \n        }\n    }\n\n    return (\n        <div>\n            \n            \n            <div className=\"todo-app\">\n                <h1>Add Daily Notes</h1>\n                <TodoForm onSubmit={addTodo} />\n            </div>\n            \n            <div className=\"todo-app\" style={{width:\"90%\", minHeight:\"200px\",height:\"auto\"}}>\n                <div className=\"header-container\">\n                    <div className=\"todo-header\" style={{float: \"left\"}}>\n                        <label className=\"label-header\" for=\"sortby\">Sort By:</label>\n\n                        <select onChange={sortBy} name=\"sortby\" id=\"sortby\">\n                            <option value=\"newest\">Newest First</option>\n                            <option value=\"oldest\">Oldest First</option>\n                        </select>\n                    </div>\n                \n                    <div className=\"todo-header\" style={{float: \"right\", marginBottom:\"30px\"}}>\n                        <label className=\"label-header\"  for=\"filterby\">Filter By:</label>\n                        \n                        <label className=\"filter-header\" for=\"filterbyweek\">Week:</label>\n                        <select onChange={handleWeek} name=\"week\" id=\"filterbyweek\">\n                            <option value=\"Default\">Default</option>\n                            {\n                                [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"].map((item, index) => ( <option value={index}>{item}</option>))\n                            }\n                        </select>\n\n                        <label className=\"filter-header\" for=\"filterbymonth\">Month:</label>\n                        <select onChange={handleMonth} name=\"Month\" id=\"filterbymonth\">\n                            <option value=\"Default\">Default</option>\n                            {\n                                [\"January\", \"Feburary\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"].map((item, index) => ( <option value={index} >{item}</option>))\n                            }\n                        </select>\n                        <label className=\"filter-header\" for=\"filterbyyear\">Year:</label>\n                        <select onChange={handleYear} name=\"Year\" id=\"filterbyyear\">\n                            {\n                                [\"Default\", 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020].map(item => ( <option value={item} >{item}</option>))\n                            }\n                        </select>\n                    </div>\n                </div>\n                <div className=\"card-container\">\n\n                {\n                    status ? <p style={{color: \"#fffefe\", fontSize: \"xx-large\"}} >No data is found. Please enter the Data.</p> \n                    :\n                \n                    newTodos.length > 0 ? <Todo style={{cursor:\"pointer\"}}  todos={newTodos} completeTodo={completeTodo} removeTodo={removeTodo}  updatedTodo={updatedTodo} sortBy={sortBy} />\n                    :\n                    <Todo style={{cursor:\"pointer\"}}  todos={todos} completeTodo={completeTodo} removeTodo={removeTodo}  updatedTodo={updatedTodo} sortBy={sortBy} />\n                \n                }\n                </div>\n            </div>\n        </div>\n    )\n}\n","/home/richachauhan59/Masai/diary_app/src/components/TodoForm.jsx",["46"],"import React,{useState, useEffect, useRef} from 'react'\nimport {v4 as uuid} from 'uuid'\n\nexport default function TodoForm(props) {\n    const [input, setInput] = useState('')\n    var today = new Date();  \n    const [date, setDate] = useState('')\n\n    const inputRef = useRef(null)\n\n    useEffect(() => {\n        inputRef.current.focus()\n    })\n\n    const handleChange = (e) => {\n        setInput(e.target.value)\n    }\n    const handleDate = (e) => {\n        setDate(e.target.value)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        props.onSubmit({\n            id: uuid(),\n            text: input,\n            date: date\n        })\n        setInput('')\n    }\n    // today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate()+' :: '+today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds()\n\n    return (\n        <div>\n            <form className=\"todo-form\" onSubmit={handleSubmit}>\n                <div style={{margin:\"30px\"}}>\n                    <input className=\"todo-input\"\n                    type=\"date\" \n                    onChange={handleDate}\n                    value={date}\n                    />\n                </div>\n                <div>\n                <textarea rows=\"4\" cols=\"50\"\n                placeholder=\"Enter text here...\" \n                value={input} name=\"text\" \n                className=\"todo-input\" \n                onChange={handleChange}\n                ref={inputRef}\n                />\n                <button type=\"submit\" className=\"todo-button\" >Add</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n",["47","48"],"/home/richachauhan59/Masai/diary_app/src/components/Todo.jsx",["49"],"import React,{useState} from 'react'\nimport TodoForm from './TodoForm'\nimport {RiCloseCircleLine} from 'react-icons/ri'\nimport {TiEdit} from 'react-icons/ti'\n\nfunction Todo({todos, completeTodo, removeTodo, updatedTodo }) {\n    const [edit, setEdit] = useState({\n        id:null,\n        value:\"\"\n    })\n\n    const submitUpdate = (value) => {\n        updatedTodo(edit.id, value)\n        setEdit({\n            id:null,\n            value:''\n        })\n    }\n\n    if(edit.id){\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />\n    }\n\n    return todos.map((todo, index) => (\n        <div className=\"card\" style={{cursor:\"pointer\",width: \"98%\"}} className=\"todo-row\" key={index} >\n            <div className=\"card-header\">\n                <h6 className=\"todo-date\">\n                    {todo.date}\n                </h6>\n\n                <h6 className=\"icons\">\n                    <RiCloseCircleLine\n                    onClick={() => removeTodo(todo.id)}\n                    className='delete-icon'\n                    />\n                    <TiEdit\n                    onClick={() => setEdit({id: todo.id, value: todo.text})}\n                    className='edit-icon' \n                    />\n                </h6>\n            </div>\n            <div className=\"card-body\" key={todo.id} >\n                {todo.text}\n            </div>\n            \n        </div>\n    ))\n}\n\nexport default Todo\n",{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":2,"column":10,"nodeType":"56","messageId":"57","endLine":2,"endColumn":28},{"ruleId":"54","severity":1,"message":"58","line":10,"column":12,"nodeType":"56","messageId":"57","endLine":10,"endColumn":16},{"ruleId":"54","severity":1,"message":"59","line":11,"column":12,"nodeType":"56","messageId":"57","endLine":11,"endColumn":17},{"ruleId":"54","severity":1,"message":"60","line":12,"column":12,"nodeType":"56","messageId":"57","endLine":12,"endColumn":16},{"ruleId":"61","severity":1,"message":"62","line":61,"column":27,"nodeType":"63","messageId":"64","endLine":61,"endColumn":29},{"ruleId":"61","severity":1,"message":"62","line":67,"column":85,"nodeType":"63","messageId":"64","endLine":67,"endColumn":87},{"ruleId":"61","severity":1,"message":"62","line":69,"column":34,"nodeType":"63","messageId":"64","endLine":69,"endColumn":36},{"ruleId":"61","severity":1,"message":"62","line":85,"column":27,"nodeType":"63","messageId":"64","endLine":85,"endColumn":29},{"ruleId":"61","severity":1,"message":"62","line":90,"column":79,"nodeType":"63","messageId":"64","endLine":90,"endColumn":81},{"ruleId":"61","severity":1,"message":"62","line":92,"column":35,"nodeType":"63","messageId":"64","endLine":92,"endColumn":37},{"ruleId":"61","severity":1,"message":"62","line":108,"column":27,"nodeType":"63","messageId":"64","endLine":108,"endColumn":29},{"ruleId":"61","severity":1,"message":"62","line":113,"column":78,"nodeType":"63","messageId":"64","endLine":113,"endColumn":80},{"ruleId":"61","severity":1,"message":"62","line":115,"column":34,"nodeType":"63","messageId":"64","endLine":115,"endColumn":36},{"ruleId":"54","severity":1,"message":"65","line":6,"column":9,"nodeType":"56","messageId":"57","endLine":6,"endColumn":14},{"ruleId":"50","replacedBy":"66"},{"ruleId":"52","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":25,"column":71,"nodeType":"70","endLine":25,"endColumn":91},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'RiAlarmWarningLine' is defined but never used.","Identifier","unusedVar","'week' is assigned a value but never used.","'month' is assigned a value but never used.","'year' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'today' is assigned a value but never used.",["71"],["72"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]